--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then local v67=0;while true do if (0==v67) then v19=v0(v3(v20,1,1));return "";end end else local v68=0;local v69;while true do if (v68==0) then v69=v2(v0(v20,16));if v19 then local v88=v5(v69,v19);v19=nil;return v88;else return v69;end break;end end end end);local function v21(v22,v23,v24)if v24 then local v70=(v22/((1 + 1)^(v23-((3866 -1890) -(1419 + 556)))))%((1 + 1)^(((v24-(1 + 0)) -(v23-(1 + 0))) + (544 -(286 + 257)))) ;return v70-(v70%((821 -544) -(62 + 72 + 142))) ;else local v71=2^(v23-(1942 -(419 + 1522))) ;return (((v22%(v71 + v71))>=v71) and (530 -(378 + (360 -209)))) or (0 -0) ;end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39=0 + 0 ;local v40;local v41;while true do if (v39==(813 -(279 + 533))) then return (v41 * (389 -133)) + v40 ;end if (v39==((414 -264) -(57 + 93))) then v40,v41=v1(v16,v18,v18 + 2 );v18=v18 + (5 -3) ;v39=1804 -(99 + 273 + 1431) ;end end end local function v27()local v42=(0 -0) + 0 ;local v43;local v44;local v45;local v46;while true do if (v42==(0 -0)) then v43,v44,v45,v46=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (1311 -((1917 -(575 + 726)) + 691)) ;v42=1 + 0 ;end if (v42==(4 -(523 -(400 + 120)))) then return (v46 * (36838116 -20060900)) + (v45 * (67457 -(1647 + 274))) + (v44 * (86 + 170)) + v43 ;end end end local function v28()local v47=v27();local v48=v27();local v49=2 -1 ;local v50=(v21(v48,1,1 + 19 ) * ((2 + 0)^(562 -(314 + 216)))) + v47 ;local v51=v21(v48,301 -(57 + 223) ,19 + 1 + 11 );local v52=((v21(v48,1856 -(340 + 1484) )==(867 -(815 + 51))) and  -(1 + 0 + 0)) or (1 -0) ;if (v51==0) then if (v50==(0 + 0)) then return v52 * (0 + 0) ;else v51=1 + 0 + 0 ;v49=(0 -0) -0 ;end elseif (v51==(3089 -(694 + 348))) then return ((v50==(0 -0)) and (v52 * (1/(0 + 0)))) or (v52 * NaN) ;end return v8(v52,v51-(605 + 418) ) * (v49 + (v50/((2 + 0)^(25 + 27)))) ;end local function v29(v30)local v53=686 -(6 + 21 + 659) ;local v54;local v55;while true do if (v53==(4 -2)) then v55={};for v78=1389 -(141 + 1247) , #v54 do v55[v78]=v2(v1(v3(v54,v78,v78)));end v53=3;end if (v53==3) then return v6(v55);end if (v53==(3 -2)) then v54=v3(v16,v18,(v18 + v30) -(1823 -(690 + (3895 -2763))) );v18=v18 + v30 ;v53=1 + 1 ;end if (v53==(0 -0)) then v54=nil;if  not v30 then local v86=0;while true do if (v86==(0 + 0)) then v30=v27();if (v30==(0 + 0 + 0)) then return "";end break;end end end v53=1 + 0 ;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==(1 -0)) then local v72=240 -(180 + 60) ;while true do if (v72==1) then for v89=1 -0 ,v61 do local v90=0;local v91;local v92;local v93;local v94;while true do if (v90~=1) then else v93=nil;v94=nil;v90=76 -(28 + 46) ;end if (v90~=2) then else while true do if (v91~=1) then else v94=nil;while true do if (v92~=1) then else if (v93==1) then v94=v25()~=0 ;elseif (v93==(7 -5)) then v94=v28();elseif (v93~=3) then else v94=v29();end v62[v89]=v94;break;end if (v92==(0 + 0)) then local v132=0 + 0 ;local v133;while true do if (v132~=0) then else v133=0 -0 ;while true do if (0==v133) then v93=v25();v94=nil;v133=2 -1 ;end if (1==v133) then v92=1;break;end end break;end end end end break;end if (v91~=(1268 -(1201 + 67))) then else local v122=0;while true do if (0==v122) then local v134=0;while true do if (v134==(1012 -(622 + 389))) then v122=1051 -(809 + 241) ;break;end if (v134~=0) then else v92=0 + 0 ;v93=nil;v134=1;end end end if (1==v122) then v91=575 -(432 + 142) ;break;end end end end break;end if (v90==(0 + 0)) then v91=0;v92=nil;v90=675 -(483 + 191) ;end end end v60[7 -4 ]=v25();v72=2;end if ((0 + 0)~=v72) then else v61=v27();v62={};v72=1720 -(782 + 937) ;end if (v72==(694 -(50 + 642))) then v56=2;break;end end end if (v56~=(1531 -(778 + 753))) then else local v73=1305 -(1130 + 175) ;while true do if (v73~=1) then else v59={};v60={v57,v58,nil,v59};v73=1 + 1 ;end if (2~=v73) then else v56=1;break;end if (v73~=0) then else v57={};v58={};v73=3 -2 ;end end end if (v56==(649 -(431 + 216))) then local v74=0;while true do if (v74==1) then for v95=1,v27() do v59[v95]=v27();end return v60;end if (v74~=0) then else for v97=1786 -(1287 + 498) ,v27() do local v98=0 -0 ;local v99;local v100;while true do if (v98==0) then v99=0;v100=nil;v98=534 -(182 + 351) ;end if ((1980 -(76 + 1903))~=v98) then else while true do if (v99~=0) then else v100=v25();if (v21(v100,1,1)==(1217 -(739 + 478))) then local v123=0 -0 ;local v124;local v125;local v126;local v127;local v128;while true do if (v123~=1) then else v126=nil;v127=nil;v123=2 -0 ;end if (v123==(1667 -(908 + 757))) then v128=nil;while true do if (v124==(1 + 1)) then while true do if (v125==0) then local v143=0 -0 ;while true do if (v143~=0) then else local v299=0;local v300;while true do if ((0 + 0)~=v299) then else v300=438 -(298 + 140) ;while true do if (v300==(0 + 0)) then local v380=0;while true do if ((0 -0)~=v380) then else v126=v21(v100,3 -1 ,1049 -(58 + 988) );v127=v21(v100,1158 -(243 + 911) ,6);v380=1;end if (v380~=(1 + 0)) then else v300=1;break;end end end if (v300==(1 + 0)) then v143=1;break;end end break;end end end if (v143~=(782 -(270 + 511))) then else v125=1;break;end end end if (v125~=1) then else local v144=0 + 0 ;local v145;while true do if (0~=v144) then else v145=0;while true do if (v145~=1) then else v125=2;break;end if (v145~=(1809 -(1714 + 95))) then else local v317=0;while true do if ((1096 -(567 + 529))~=v317) then else v128={v26(),v26(),nil,nil};if (v126==0) then local v433=1797 -(832 + 965) ;local v434;local v435;while true do if (v433==(1537 -(579 + 957))) then while true do if (v434==(0 + 0)) then v435=0;while true do if (v435~=0) then else v128[831 -(394 + 434) ]=v26();v128[6 -2 ]=v26();break;end end break;end end break;end if (v433==0) then v434=0;v435=nil;v433=1;end end elseif (v126==(1 -0)) then v128[1 + 2 ]=v27();elseif (v126==(2 -0)) then v128[3]=v27() -(2^16) ;elseif (v126==(3 -0)) then local v477=0;local v478;local v479;while true do if (v477~=1) then else while true do if (v478==0) then v479=0;while true do if (v479==(0 + 0)) then v128[2 + 1 ]=v27() -(2^(1690 -(1461 + 213))) ;v128[1066 -(16 + 1046) ]=v26();break;end end break;end end break;end if (v477~=(0 + 0)) then else local v492=356 -(298 + 58) ;while true do if (1~=v492) then else v477=1 -0 ;break;end if (v492~=0) then else v478=729 -(304 + 425) ;v479=nil;v492=3 -2 ;end end end end end v317=1;end if (v317==1) then v145=1 -0 ;break;end end end end break;end end end if (v125~=3) then else if (v21(v127,3,1467 -(1136 + 328) )==1) then v128[12 -8 ]=v62[v128[4 + 0 ]];end v57[v97]=v128;break;end if (v125~=(868 -(139 + 727))) then else local v147=723 -(305 + 418) ;local v148;while true do if (v147==(0 -0)) then v148=0;while true do if (v148==0) then local v318=0;while true do if (v318==(1 + 0)) then v148=1;break;end if (v318~=(0 -0)) then else if (v21(v127,887 -(669 + 217) ,1 + 0 )~=1) then else v128[2 + 0 ]=v62[v128[1231 -(885 + 344) ]];end if (v21(v127,757 -(297 + 458) ,5 -3 )==1) then v128[3]=v62[v128[1906 -(1583 + 320) ]];end v318=1;end end end if (v148~=(1344 -(580 + 763))) then else v125=3;break;end end break;end end end end break;end if (v124~=0) then else local v135=0;while true do if (v135==0) then v125=0 -0 ;v126=nil;v135=1;end if (v135==(1 -0)) then v124=1;break;end end end if ((1156 -(552 + 603))~=v124) then else v127=nil;v128=nil;v124=121 -(70 + 49) ;end end break;end if (v123==0) then v124=0 + 0 ;v125=nil;v123=1 + 0 ;end end end break;end end break;end end end for v101=1,v27() do v58[v101-1 ]=v33();end v74=3 -2 ;end end end end end local function v34(v35,v36,v37)local v63=0;local v64;local v65;local v66;while true do if (v63==0) then v64=v35[1];v65=v35[2];v63=1;end if (v63==1) then v66=v35[3];return function(...)local v80=0;local v81;local v82;local v83;local v84;local v85;while true do if (v80==3) then A,B=v32(v11(v85));if  not A[1] then local v113=0;local v114;while true do if (v113==0) then v114=v35[4][v81] or "?" ;error("Script error at ["   .. v114   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end if (v80==1) then v83={...};v84=v12("#",...) -1 ;v80=2;end if (0==v80) then v81=1;v82= -1;v80=1;end if (v80==2) then v85=nil;v85=function()local v103=v64;local v104=v65;local v105=v66;local v106=v32;local v107={};local v108={};local v109={};for v115=0 -0 ,v84 do if (((109 + 1303)<=(4666 -803)) and (v115>=v105)) then v107[v115-v105 ]=v83[v115 + (3 -2) ];else v109[v115]=v83[v115 + (1727 -(1399 + (509 -182))) ];end end local v110=(v84-v105) + 1 + 0 ;local v111;local v112;while true do local v116=0 + 0 ;while true do if ((v116==((172 -(69 + 99)) -3)) or ((2466 -1503)==2866)) then if ((32<((1287 -516) + 3753)) and (v112<=(101 -72))) then if ((v112<=(10 + 4)) or ((4925 -((1053 -(342 + 132)) + 286))<=(495 + 989))) then if (((2202 + 358)<=(4997 -(193 + 171))) and (v112<=(12 -6))) then if (((6575 -4262)>(4690 -3115)) and (v112<=(2 -(90 -(23 + 67))))) then if ((v112<=(0 -0)) or ((3059 -934)>(6864 -(1657 + 237)))) then if (((23207 -18282)>((17642 -13964) -(118 + 499))) and (v109[v111[929 -(222 + 386 + 319) ]]==v111[42 -(28 + 10) ])) then v81=v81 + 1 + 0 ;else v81=v111[933 -(260 + 670) ];end elseif ((v112==(3 -2)) or ((12123 -9671)==(1242 -(127 + 121)))) then if ((v111[6 -4 ]<v109[v111[4 + 0 ]]) or (((2744 -(973 + 550)) -471)>(2746 -(157 + 1764)))) then v81=v81 + (2 -1) ;else v81=v111[7 -4 ];end else v109[v111[801 -(579 + 220) ]][v111[3 + 0 ]]=v109[v111[616 -(521 + 91) ]];end elseif (((6350 -4228)==(9539 -7417)) and (v112<=(1 + 3 + 0))) then if (((1350 + 2497)>(4701 -2852)) and (v112>(1620 -(689 + 928)))) then v109[v111[2 + 0 ]]();else v109[v111[2]]=v37[v111[10 -7 ]];end elseif ((v112==(8 -3)) or ((4082 -(1650 + 209))<=(2793 -(1071 + 927)))) then v109[v111[5 -3 ]]=v109[v111[(6 + 0) -3 ]]%v109[v111[19 -15 ]] ;else v109[v111[8 -6 ]]=v34(v104[v111[471 -(135 + 333) ]],nil,v37);end elseif ((v112<=(9 + 1)) or ((1782 -(313 + 560))>=(4245 -(1133 + 373)))) then if (((4124 -(312 + 196))>(5138 -3213)) and (v112<=(18 -10))) then if (((3453 -(823 + 142))<=(6416 -3542)) and (v112==(34 -(984 -(6 + 951))))) then v37[v111[1531 -(788 + 740) ]]=v109[v111[7 -(2 + 3) ]];else local v158=0 + 0 ;local v159;local v160;local v161;while true do if ((v158==(2 -1)) or ((200 -(74 + 28))==(4029 -(375 + 319)))) then v161=nil;while true do if ((((5496 -(1270 + 695)) -(544 + 1315))>(653 -(263 + 234))) and ((1019 -(706 + 313))==v159)) then local v319=0 -(0 -0) ;while true do if (((741 -(502 + 83))<=(6457 -2995)) and (v319==(0 -0))) then v160=v111[2 + 1 + 0 ];v161=v109[v160];v319=1;end if (((4111 + 86)>(19568 -15529)) and (v319==(1801 -(727 + 1073)))) then v159=1 + 0 ;break;end end end if (((5550 -(1198 + 163))>((2638 -(1193 + 719)) + 268)) and ((1604 -(1085 + 266 + 252))==v159)) then for v353=v160 + (1 -0) ,v111[9 -5 ] do v161=v161   .. v109[v353] ;end v109[v111[108 -(33 + 73) ]]=v161;break;end end break;end if (((2210 -(1325 + 510))<=(927 + 743)) and (v158==(0 -0))) then v159=0 + 0 ;v160=nil;v158=2 -1 ;end end end elseif (((2120 -(1475 + 424))<(331 + 3076)) and (v112==9)) then v109[v111[2 + 0 ]]=v109[v111[6 -3 ]] -v111[7 -3 ] ;else local v163=0 + 0 ;local v164;local v165;local v166;while true do if ((v163==(1 + 0)) or ((783 + 1018)<=(2031 -(8 + 331)))) then v166=nil;while true do if ((((3953 -(1159 + 92)) -1787)==(2769 -1854)) and (v164==1)) then for v354=v165 + 1 + 0 ,v111[(48 -34) -11 ] do v7(v166,v109[v354]);end break;end if ((v164==((0 -0) + (0 -0))) or ((3913 -(1217 + 43))<=((328 -226) + 111))) then local v321=1844 -(683 + 1161) ;while true do if ((v321==(0 + 0)) or ((2228 + 1079)==(4147 + 47))) then v165=v111[1 + 1 ];v166=v109[v165];v321=1 + 0 ;end if (((1 + 0)==v321) or ((1204 + 729)<(77 + 321))) then v164=1;break;end end end end break;end if (((1343 -(40 + 73))<=(45 + 1303)) and (v163==0)) then v164=351 -((128 -72) + 295) ;v165=nil;v163=2 -1 ;end end end elseif ((v112<=(2 + 10)) or ((3195 -(4 + 7))>=(5419 -(56 + 1264)))) then if ((v112>(135 -(90 + 34))) or ((2490 -1805)>(5996 -(150 + 920)))) then local v167=0 -0 ;local v168;local v169;local v170;local v171;while true do if (((5144 -(1092 + 671))<=(4793 -(476 + 423))) and (v167==(649 -(239 + 408)))) then while true do if ((v168==(0 + 0 + 0)) or ((935 -271)>(2035 + 2343))) then local v322=1404 -(1219 + 185) ;while true do if (((3847 -(3812 -(468 + 892)))==(6 + (2701 -1312))) and (v322==(1 + 0))) then v168=3 -2 ;break;end if ((((5267 -3693) + 744)<((12913 + 2504) -11999)) and (((0 + 0) -0)==v322)) then v169=v111[2 + 0 ];v170={v109[v169](v109[v169 + (3 -2) ])};v322=1 + 0 + 0 ;end end end if (((3741 -(234 + 1407))>(3765 -(1141 + 745))) and (v168==(1 -0))) then v171=0 + (1248 -(318 + 930)) ;for v355=v169,v111[1512 -(101 + 1407) ] do local v356=377 -((834 -531) + 74) ;local v357;local v358;while true do if (((4639 -1089)>(39 -(1766 -(1573 + 172)))) and (v356==(1522 -(1295 + 144 + 83)))) then v357=0 -0 ;v358=nil;v356=689 -(182 + 414 + 23 + 69) ;end if (((3942 -((2439 -(314 + 1306)) + 877))>=(4158 -2246)) and (v356==((1 -0) + 0))) then while true do if ((v357==(0 + 0)) or ((10798 -7196)<(1670 -969))) then v358=0 -0 ;while true do if ((v358==(0 + 0)) or ((2176 -(511 + 96))<=(1353 -777))) then v171=v171 + ((1111 -451) -(101 + 558)) ;v109[v355]=v170[v171];break;end end break;end end break;end end end break;end end break;end if ((v167==(1 -0)) or ((1323 -(71 + 14))==(2729 + 1378))) then v170=nil;v171=nil;v167=2;end if (((48 + 131 + (1717 -(848 + 35)))<(1160 + 1050)) and (v167==(0 + 0))) then v168=0 + 0 + 0 ;v169=nil;v167=1959 -(1335 + 623) ;end end else local v172=0 + 0 ;local v173;local v174;while true do if ((v172==(0 -0)) or ((374 + 463)<(761 -192))) then local v301=0 -0 ;while true do if ((v301==(0 + 0)) or ((2987 -(233 + 8))==(811 + 1843))) then v173=0 + 0 ;v174=nil;v301=1159 -(750 + 408) ;end if ((v301==(404 -(229 + 174))) or (((1955 -640) -(409 + 781))>(4560 -((911 -568) + 1321)))) then v172=(3965 -2559) -(112 + 367 + (2588 -(174 + 1488))) ;break;end end end if ((1==v172) or ((20307 -15943)<(3978 -1297))) then while true do if (((5437 -2143)<(6405 -(730 + 1222))) and (v173==(802 -(72 + 730)))) then v174=v109[v111[550 -(169 + 41 + 336) ]];if ( not v174 or (1365==(15862 -11705))) then v81=v81 + 1 + (1489 -(1420 + 69)) ;else local v375=0 -0 ;local v376;while true do if (((5220 -((517 -(144 + 209)) + 250))==(5283 -(446 + 31))) and ((0 + 0)==v375)) then v376=(815 -(151 + 664)) + 0 ;while true do if (((1366 -(185 + 314))<(3192 -1702)) and (v376==(0 -(0 + 0)))) then v109[v111[1 + (1070 -(547 + 522)) ]]=v174;v81=v111[3 -0 ];break;end end break;end end end break;end end break;end end end elseif (((1400 -412)>(194 -(14 + 5))) and (v112>(2 + (308 -(190 + 107))))) then do return;end else v109[v111[1009 -(277 + 730) ]]=v109[v111[1445 -(924 + 518) ]]%v111[4 + 0 ] ;end elseif ((v112<=21) or ((8607 -4390)<=2094)) then if ((((2867 + 1332) -(23 + 393))<=(11886 -7324)) and (v112<=(45 -28))) then if ((v112<=(443 -((2042 -(1209 + 495)) + 90))) or (2949>=(4052 -(28 + 407)))) then local v136=0 + 0 ;local v137;local v138;local v139;local v140;while true do if ((3638<(5768 -(555 + 561))) and (v136==(758 -(677 + 81)))) then local v285=(1621 -(27 + 1594)) + 0 ;while true do if ((v285==(1534 -(1440 + 94))) or ((15 + 2 + 328)>((513 -227) + 233))) then v137=0 -(0 -0) ;v138=nil;v285=1 + 0 ;end if (((5247 -(166 + 982))==((4687 -(378 + 1071)) + 861)) and (v285==(1924 -((3078 -(1195 + 744)) + 784)))) then v136=2 -(1 -0) ;break;end end end if (((4772 -(19 + 431))>999) and (v136==(6 -4))) then while true do if ((v137==(1 + 0)) or ((8160 -4971)>=(5337 -(40 + 1946)))) then local v308=0 + 0 ;while true do if ((v308==(0 + 0)) or ((14761 -10351)<(2142 + 554))) then local v359=1779 -(203 + 1576) ;while true do if (((5239 -1736)>=(548 + 1397)) and (v359==(0 + (0 -0)))) then v140={};v139=v10({},{__index=function(v413,v414)local v440=0 -0 ;local v441;local v442;while true do if (((845 -(167 + 288))<(2267 + 831 + 376)) and (v440==(1 + 0))) then while true do if (((3455 -(319 + 442))<(12756 -9096)) and (v441==(0 -0))) then local v480=0 + (1328 -(757 + 571)) ;while true do if ((v480==(0 + 0)) or ((1227 + 0)<=(193 + 97 + 566))) then v442=v140[v414];return v442[1881 -(1277 + 603) ][v442[2 + 0 ]];end end end end break;end if ((v440==(0 -0)) or ((8682 -6380)>=(9805 -6200))) then v441=(46 -(42 + 4)) + 0 ;v442=nil;v440=3 -2 ;end end end,__newindex=function(v413,v414,v415)local v443=1681 -(968 + 321 + 392) ;local v444;while true do if ((v443==(140 -(103 + 35 + 2))) or ((1621 -(57 + 184))==(902 + 1192))) then v444=v140[v414];v444[1 -0 ][v444[1764 -(119 + 132 + 1511) ]]=v415;break;end end end});v359=1 + 0 ;end if ((v359==(850 -(709 + (783 -(549 + 94))))) or ((257 + 1708)>=(5387 -(280 + 1417)))) then v308=(2 -1) + (1717 -(131 + 1586)) ;break;end end end if (((5594 -(871 + 299))==(6575 -(3410 -(1020 + 239)))) and (v308==(573 -(422 + 150)))) then v137=(507 -(345 + 160)) + 0 ;break;end end end if (((16358 -12155)>=(902 + 983)) and (v137==(7 -5))) then for v312=749 -(23 + 725) ,v111[1 + 3 ] do local v313=0 -0 ;local v314;local v315;local v316;while true do if (((0 + 0)==v313) or ((4029 -1999)>(7822 -(3435 + 1692)))) then v314=0 -0 ;v315=nil;v313=1 + 0 ;end if (((45 + 3045)>(500 + 908)) and (v313==(3 -2))) then v316=nil;while true do if (((16045 -12340)<(32 + 4589)) and ((957 -((689 -(57 + 131)) + 455))==v314)) then while true do if (((574 + (3884 -3059))<=(5378 -(674 + 1193))) and (v315==(316 -(78 + 238)))) then local v458=0 + 0 ;local v459;while true do if (((4825 -(1316 + 238))>(6349 -3771)) and (v458==((951 -(724 + 227)) + 0))) then v459=0 + 0 ;while true do if (((0 + 0)==v459) or ((2190 + 102)>=(10780 -7753))) then v81=v81 + (419 -(176 + 205 + 37)) ;v316=v103[v81];v459=1587 -(514 + 1072) ;end if ((((1011 -(710 + 299)) -1)==v459) or (((1504 + 2699) -(1028 + 205))<(1187 -608))) then v315=(584 + 438) -(106 + 915) ;break;end end break;end end end if ((((243 -(170 + 15)) + 37)<(2757 -(244 + 248))) and (v315==(76 -(6 + 69)))) then if ((v316[1 -0 ]==(14 + 17)) or ((14 + 278)>=(4505 + 161))) then v140[v312-(1 + 0) ]={v109,v316[(203 + 138) -(134 + 203 + 1) ]};else v140[v312-(4 -3) ]={v36,v316[1947 -(1843 + 101) ]};end v108[ #v108 + (1464 -((1350 -998) + (1880 -(733 + 36)))) ]=v140;break;end end break;end if ((804<((9552 -5722) -(1774 + 112))) and (((1192 -(971 + 221)) -0)==v314)) then v315=0 -(236 -(35 + 201)) ;v316=nil;v314=2 -1 ;end end break;end end end v109[v111[6 -4 ]]=v34(v138,v139,v37);break;end if (((2204 -459)<(10104 -5709)) and (v137==(1125 -(230 + 895)))) then local v310=0 + 0 ;local v311;while true do if ((v310==(772 -(266 + 388 + 118))) or ((2609 -1221)>=(2310 -712))) then v311=0 -0 ;while true do if (((681 + 3974)==(17277 -12622)) and (v311==(1 + 0))) then v137=1511 -((2132 -1434) + 812) ;break;end if ((v311==(882 -(487 + 395))) or ((1635 + 2724)<=(4526 -(147 + 264)))) then local v416=0 + 0 ;while true do if (((2255 + 1165)>(1366 + 195 + 87)) and (v416==(1522 -(241 + 1281)))) then v138=v104[v111[8 -5 ]];v139=nil;v416=126 -(63 + 62) ;end if (((25 + 1031)<(292 + 3520)) and ((106 -((151 -62) + 16))==v416)) then v311=173 -(57 + 115) ;break;end end end end break;end end end end break;end if (((1296 -((238 -87) + 545))<(6952 -5023)) and (v136==(1 + 0))) then local v286=0 + 0 ;while true do if (((6237 -(42 + 1928))>=(2872 -((2438 -(113 + 1512)) + 552))) and (v286==(3 -2))) then v136=2 + 0 ;break;end if (((6280 -3965)>=(183 + 1396)) and (v286==((0 + 0) -0))) then v139=nil;v140=nil;v286=1;end end end end elseif ((((2380 -(1567 + 11)) + 2594)>=(1103 + 359)) and (v112==(1176 -(170 + (2027 -(225 + 812)))))) then if ((v109[v111[1 + 1 ]]==v109[v111[6 -(2 -0) ]]) or ((294 + 62)>=(3212 -(1605 + 247 + 22)))) then v81=v81 + (3 -2) ;else v81=v111[3];end else v109[v111[1612 -((1226 -(26 + 549)) + 959) ]]=v111[3 + 0 ];end elseif (((620 + (5793 -4414))<=(2813 -(355 + 2 + 126))) and (v112<=(43 -24))) then if ((v112>(15 + 3)) or ((176 + 452)>=(4158 -(742 + (536 -(4 + 123)))))) then local v178=0 + 0 ;local v179;while true do if (((3512 -2086)<2296) and (v178==(0 -0))) then v179=v111[2 + 0 + 0 ];do return v13(v109,v179,v82);end break;end end else v109[v111[2 + 0 ]]=v111[2 + 1 ] + v109[v111[1165 -(49 + 1112) ]] ;end elseif ((v112>((277 -197) -60)) or (2181==((8191 -5251) -(56 + 242)))) then local v181=0 -(0 + 0) ;local v182;local v183;local v184;while true do if ((v181==(504 -(501 + 2))) or ((10774 -7342)<(15 + 34))) then v184=nil;while true do if (((410 + 317)<=(4082 -(11 + 7))) and (v182==(1344 -(1035 + 308)))) then while true do if ((2537<=(3852 -(903 + 232))) and (v183==(1459 -(720 + 739)))) then v184=v111[(722 -(182 + 538)) + 0 ];v109[v184]=v109[v184](v13(v109,v184 + (1787 -(70 + 61 + 1655)) ,v111[1 + 2 ]));break;end end break;end if (((1797 + 531)<=(4792 -(1057 + 344))) and (v182==(343 -(210 + 133)))) then local v324=(0 + 0) -0 ;while true do if ((v324==(1 -0)) or ((3744 -(327 + 516))>=(2674 + 890))) then v182=1 + 0 ;break;end if (((161 -103)<=(2519 + 833)) and (v324==(0 -0))) then v183=0 + 0 ;v184=nil;v324=1;end end end end break;end if ((3142>=(837 + 672)) and (v181==(0 -0))) then v182=0 -0 ;v183=nil;v181=632 -(44 + 587) ;end end else for v287=v111[3 -1 ],v111[8 -5 ] do v109[v287]=nil;end end elseif (((3013 -(886 + 309))==(1762 + 56)) and (v112<=(6 + 4 + 15))) then if (((7899 -4262)>(2505 + 257 + 775)) and (v112<=(1257 -(746 + 488)))) then if (((139 + 101)>=(1 + 1)) and (v112>((1247 -(165 + 1021)) -39))) then local v185=0 + 0 ;local v186;local v187;local v188;local v189;while true do if (((9324 -(2319 + 2937))>=(1953 -(313 + 141))) and (v185==(0 -0))) then v186=0 + 0 ;v187=nil;v185=2 -1 ;end if ((v185==(522 -(152 + 369))) or ((231 -149)>(4735 -(417 + 80)))) then v188=nil;v189=nil;v185=1435 -(1325 + 108) ;end if (((4427 -(241 + 1403))==(2041 + 742)) and (v185==(568 -(7 + 559)))) then while true do if (((2607 -((246 -175) + 1254))==(383 + 899)) and (((2504 -(1114 + 444)) -(349 + 596))==v186)) then v189=(0 -0) -0 ;for v360=v187,v111[8 -4 ] do local v361=0 + 0 ;while true do if (((817 + (4127 -(626 + 283)))>(1695 + 544)) and (v361==(0 -0))) then v189=v189 + 1 + (969 -(229 + 740)) ;v109[v360]=v188[v189];break;end end end break;end if (((13660 -10879)<=(16084 -11951)) and (v186==0)) then local v325=930 -(299 + 631) ;while true do if (((1086 -688)<(613 -(59 + 144))) and (v325==(2 -1))) then v186=1;break;end if (((8696 -(16743 -11256))==(2242 + 967)) and (v325==(0 + 0))) then v187=v111[1 + 1 ];v188={v109[v187](v13(v109,v187 + (2 -(1 + 0)) ,v82))};v325=(2085 -(229 + 182)) -(1269 + 404) ;end end end end break;end end else local v190=0 + 0 ;local v191;while true do if ((v190==((0 + 0) -0)) or ((2687 + 917)<=(59 + 758))) then v191=v111[436 -((499 -(219 + 45)) + 199) ];v109[v191](v13(v109,v191 + 1 + 0 + 0 ,v82));break;end end end elseif (((168 -92)<=((10214 -3054) -(5948 -(245 + 72)))) and (v112>(81 -57))) then local v192=0 -(0 -0) ;local v193;local v194;local v195;while true do if ((v192==(0 -0)) or ((2162 + 708)<=(7256 -4437))) then local v304=0 -0 ;while true do if (((1639 + 2530)>=((989 -559) + 1104)) and (v304==(646 -((1159 -(255 + 301)) + 43)))) then v193=v111[1 + 1 ];v194=v109[v193];v304=1876 -(561 + 1314) ;end if ((v304==(1 + 0)) or ((15454 -10601)==(663 + 1954))) then v192=1 + 0 ;break;end end end if (((4505 -(1494 + 14))==(3331 -(319 + 15))) and (v192==(1 -0))) then v195=v109[v193 + 2 ];if ((((10743 + 141) -6006)==(6066 -(875 + 313))) and (v195>(0 + 0))) then if (((2661 + 1554)>(1405 + 2707)) and (v194>v109[v193 + (3 -2) ])) then v81=v111[5 -2 ];else v109[v193 + ((1 + 7) -5) ]=v194;end elseif ((v194<v109[v193 + ((7 -5) -1) ]) or ((2214 -(400 + 1192))==(2009 + 1462))) then v81=v111[2 + 1 ];else v109[v193 + (1093 -(943 + 147)) ]=v194;end break;end end else local v196=(441 -(225 + 216)) -0 ;local v197;local v198;while true do if (((2510 + 967)<=(10017 -5364)) and (v196==(285 -(30 + 145 + 110)))) then v197=0 -(1188 -(454 + 734)) ;v198=nil;v196=1 + 0 ;end if (((216 + 902)>=(895 -512)) and (v196==(3 -2))) then while true do if ((v197==(0 + 0)) or (4850<=(1948 + 300))) then v198=v111[44 -(16 + 26) ];do return v13(v109,v198,v198 + v111[1 + 2 ] );end break;end end break;end end end elseif ((v112<=(14 + 13)) or ((8269 -4540)==(4030 + 520))) then if (((4571 -2316)>(1884 -(542 + 285))) and (v112==(60 -34))) then local v199=0 + 0 + 0 ;local v200;local v201;local v202;while true do if (((466 + 437)<=(18472 -13732)) and (v199==(460 -(334 + 125)))) then v202=nil;while true do if (((3468 -(367 + 62))>(229 + 735)) and (v200==1)) then v109[v201 + (3 -(5 -3)) ]=v202;v109[v201]=v202[v111[(13 -9) + 0 ]];break;end if ((v200==(0 -0)) or ((632 + 433)>=((11476 -7921) -((2154 -(379 + 1252)) + 1067)))) then local v332=139 -(25 + (1067 -(108 + 845))) ;while true do if (((2518 -(657 + (4553 -3493)))<(2897 -(423 + 1071))) and (v332==(1 + 0))) then v200=1 + 0 ;break;end if (((7940 -4968)>(5918 -3772)) and (v332==(0 + 0))) then v201=v111[5 -3 ];v202=v109[v111[1502 -(526 + 476 + 497) ]];v332=1 + 0 ;end end end end break;end if ((v199==(0 -0)) or ((2473 -(57 + 304))>=(5408 -(408 + (3463 -2067))))) then v200=1293 -(597 + 322 + 374) ;v201=nil;v199=1 + 0 ;end end else v109[v111[485 -(262 + 221) ]]= #v109[v111[1911 -(136 + 1772) ]];end elseif ((v112==(629 -(146 + 455))) or ((2716 -(343 + 554))>=(547 + 3223))) then v109[v111[1037 -(843 + 192) ]]=v109[v111[2 + 1 ]][v111[4 + 0 ]];else v109[v111[1542 -(1212 + 328) ]][v109[v111[8 -(4 + 1) ]]]=v109[v111[1040 -(546 + 490) ]];end elseif ((v112<=(40 + 4)) or ((128 + 121)>(1057 + (1720 -(28 + 16))))) then if ((v112<=(104 -68)) or ((1150 -471)==((5801 -2391) + (2817 -1878)))) then if ((v112<=(10 + (963 -(706 + 235)))) or ((4593 -2362)>((1852 + 2304) -1659))) then if (((4857 -3885)<=(5026 -(827 + 1059))) and (v112<=(126 -(21 + 75)))) then if (((14 + 282)<=(2033 + 2607)) and v109[v111[2 -0 ]]) then v81=v81 + ((126 + 2) -(119 + 8)) ;else v81=v111[(5303 -3875) -(1066 + 359) ];end elseif ((v112>(13 + 18)) or ((3588 + 951)<((457 -190) -106))) then if (((8538 -(5131 -(321 + 1115)))>(4583 -(617 + 659))) and (v111[2 + 0 ]<v109[v111[4 + 0 ]])) then v81=v111[44 -(8 + 33) ];else v81=v81 + (4 -3) ;end else v109[v111[1 + 1 ]]=v109[v111[730 -(288 + 85 + 354) ]];end elseif ((v112<=34) or (((2882 -(642 + 70)) -1553)==(4246 -1743))) then if (((2762 + 1569)>=(1392 + 1490)) and (v112==(470 -(240 + 197)))) then local v211=1490 -(1276 + 214) ;local v212;local v213;local v214;while true do if ((v211==(1129 -(199 + 929))) or ((852 + 1279)<(2880 -1723))) then v214=nil;while true do if (((488 + 45)==(1311 -778)) and (v212==(0 + 0))) then local v333=0 + 0 ;while true do if ((v333==(883 -(465 + 418))) or (275>(3490 -(33 + 1019)))) then v213=0 + 0 ;v214=nil;v333=1 + 0 ;end if (((6766 -4489)<(2327 + 556)) and (v333==(986 -(831 + 154)))) then v212=1;break;end end end if ((v212==(722 -(271 + 209 + 241))) or (((1436 -(95 + 674)) + 2194)>(2995 + 971))) then while true do if ((v213==(1532 -(553 + 979))) or ((2652 + 1236)<(4905 -1699))) then v214=v111[4 -2 ];v109[v214]=v109[v214](v109[v214 + 1 ]);break;end end break;end end break;end if (((8803 -4268)>=((3500 -(1211 + 317)) + 655)) and (v211==((1844 -(485 + 1359)) + 0))) then v212=285 -(134 + 151) ;v213=nil;v211=1721 -(1393 + (441 -114)) ;end end elseif ((v109[v111[6 -4 ]]~=v111[1965 -(1922 + 39) ]) or ((5514 -3998)>=(4353 -(774 + 921)))) then v81=v81 + ((1099 + 642) -(1734 + 6)) ;else v81=v111[(4 + 1) -2 ];end elseif ((v112>(20 + 15)) or ((44 + 2055)==(5051 -(487 + 79)))) then local v215=1813 -(78 + 1735) ;local v216;local v217;while true do if ((v215==(1713 -(1179 + 534))) or ((3914 -((3722 -2218) + 267))>=(20677 -15864))) then v216=0 -(447 -(414 + 33)) ;v217=nil;v215=2 -1 ;end if ((v215==(779 -(234 + 544))) or ((1722 -596)<(1243 -(848 + 215)))) then while true do if (((3072 + (3565 -(1594 + 356)))>(6416 -2455)) and ((1659 -(521 + 1138))==v216)) then v217=v111[676 -((1246 -730) + 158) ];v109[v217]=v109[v217](v13(v109,v217 + ((4 -3) -0) ,v82));break;end end break;end end else v81=v111[6 -3 ];end elseif (((2600 -(358 + 55))>(1345 -687)) and (v112<=(120 -(43 + 37)))) then if (((12905 -7922)>(3966 -1672)) and (v112<=(238 -(185 + 15)))) then if (((1225 -(1657 -(22 + 880)))<=(694 -(83 + 34 + (121 -71)))) and (v112>(1133 -(833 + 263)))) then local v219=0 -0 ;local v220;local v221;local v222;while true do if (((13671 -8951)>=(696 -(149 + 118))) and (v219==(1 + 0))) then v222=nil;while true do if ((v220==(0 -0)) or ((5272 -(1134 + (2346 -(306 + 1496))))>=(5727 -(1300 + 98)))) then local v336=0 + (0 -0) ;while true do if (((4367 -1438)>=(43 + 363)) and (v336==1)) then v220=1;break;end if ((v336==(0 + 0)) or ((5718 -(3833 -(8 + 9)))==(13872 -9209))) then v221=0 -0 ;v222=nil;v336=1425 -(556 + 868) ;end end end if ((v220==(1003 -(718 + 284))) or (4053<885)) then while true do if ((((2107 -(94 + 7)) + (2053 -(364 + 1156)))>=(169 + 925)) and (v221==(0 -0))) then v222=v111[2 -0 ];v109[v222](v109[v222 + 1 + 0 ]);break;end end break;end end break;end if ((v219==((304 + 199) -(41 + 462))) or ((2458 + 14 + 1635)==(2145 + 2091))) then v220=1944 -(1514 + (742 -(72 + 240))) ;v221=nil;v219=1 -0 ;end end else local v223=0;local v224;local v225;local v226;while true do if (((1026 + 2870)>(152 -96)) and (v223==(1 + 0))) then local v306=0 -0 ;while true do if (((3859 -(105 + 618))<(1389 + 2393)) and ((0 + 0)==v306)) then v226=v109[v224] + v225 ;v109[v224]=v226;v306=983 -(601 + 381) ;end if ((v306==1) or ((14756 -11218)>=(497 + 3750))) then v223=2 -(26 -(4 + 22)) ;break;end end end if ((((1147 + 14442) -(11990 -(224 + 13)))==(4681 -((1482 -1095) + 458))) and (v223==((0 -0) + 0))) then local v307=1266 -(368 + 898) ;while true do if (((542 + 142)==(1458 -774)) and (v307==(1 -0))) then v223=1 -0 ;break;end if (((2823 + 753)>=(138 + 52)) and (v307==0)) then v224=v111[2 + 0 ];v225=v109[v224 + 2 + (0 -0) ];v307=1 -0 ;end end end if (((251 + 183)==(1124 -(175 + 515))) and (v223==(685 -(168 + 515)))) then if ((v225>(0 + 0)) or ((221 + 769)>(759 + 3702))) then if (((3924 -(1322 + 673))==(1971 -(40 + 2))) and (v226<=v109[v224 + 1 + 0 ])) then local v366=0 -0 ;local v367;while true do if (((1545 -(105 + 631))<(4143 + 483)) and ((1758 -(1630 + 128))==v366)) then v367=398 -(274 + 64 + 60) ;while true do if ((v367==(571 -(133 + 438))) or ((5064 -(71 + 315))<(1701 -((1757 -(1014 + 492)) + 200)))) then v81=v111[3 + 0 ];v109[v224 + 3 + 0 ]=v226;break;end end break;end end end elseif (((4 + 499)<(2279 -((2564 -(541 + 1095)) + (1312 -(856 + 162))))) and (v226>=v109[v224 + (1840 -(831 + 1008)) ])) then local v368=0 -0 ;local v369;local v370;while true do if (((333 + 1077)==(597 + 813)) and ((0 -0)==v368)) then v369=0 + 0 ;v370=nil;v368=4 -3 ;end if ((v368==(1855 -(1668 + 60 + 126))) or ((5050 -(50 + 91))<=((4319 -(143 + 33)) -2712))) then while true do if ((v369==(0 + 0)) or ((6679 -4475)>(5908 -988))) then v370=0 + 0 ;while true do if ((v370==(0 -0)) or ((2832 -1955)<=(143 -66))) then v81=v111[250 -(23 + 224) ];v109[v224 + 1 + 2 ]=v226;break;end end break;end end break;end end end break;end end end elseif ((v112==39) or ((787 + 2441)<((3785 -(70 + 119)) -2789))) then if ( not v109[v111[2 + 0 ]] or ((3073 -((1713 -951) + 1003))>=(540 + 1393))) then v81=v81 + 1 + 0 ;else v81=v111[119 -(75 + 41) ];end else v109[v111[2 -(1149 -(216 + 933)) ]]=v36[v111[1706 -(218 + 850 + 635) ]];end elseif (((8655 -(5355 -(233 + 382)))==(1563 + 2352)) and (v112<=(108 -66))) then if (((59 + 2443)<(3196 -((271 -109) + 13 + 10))) and (v112==((521 -(221 + 284)) + 25))) then if (((4905 -(679 + 1261))>(2908 -(472 + 350))) and (v109[v111[434 -(71 + 361) ]]~=v109[v111[(1050 -(403 + 645)) + (358 -(12 + 344)) ]])) then v81=v81 + (1 -0) ;else v81=v111[36 -(19 + 14) ];end else local v229=0;local v230;local v231;local v232;local v233;local v234;local v235;while true do if ((3==v229) or (((1797 -(167 + 1114)) + 549)>=((167 -28) + 4412))) then while true do if (((4875 -(637 + 111))<(4177 + 158)) and (v230==(1051 -(248 + 801)))) then v235=nil;while true do if (((0 -(1280 -(1152 + 128)))==v231) or ((3813 -(249 + 556))<(3821 -2352))) then local v394=765 -(683 + 82) ;local v395;while true do if ((v394==(0 -0)) or ((4393 -((2149 -(1514 + 386)) + 849))<(14907 -11820))) then v395=(0 + 0) -0 ;while true do if ((v395==(1 -(0 + 0))) or ((929 -519)>=(17085 -12605))) then v231=1 + 0 + 0 ;break;end if ((v395==((0 -0) -0)) or ((2781 + 1906)<=(44 + 1207))) then v232=v111[(922 + 1002) -(1471 + 451) ];v233,v234=v106(v109[v232](v13(v109,v232 + (4 -3) ,v111[1142 -(208 + 931) ])));v395=1 + 0 ;end end break;end end end if ((v231==(1 -0)) or ((1118 + 287 + 281)<(1625 -1130))) then local v396=0 -0 ;local v397;while true do if ((v396==(0 + 0)) or ((936 + 2205)<=(5447 -2917))) then v397=0 + 0 ;while true do if (((427 -(294 + 133))==v397) or ((2492 -1612)>(739 + 534))) then local v463=0;while true do if (((4586 -(815 + 173))<(7996 -4198)) and (v463==(0 + (256 -(208 + 48))))) then v82=(v234 + v232) -(1 + 0) ;v235=(0 -0) + 0 + 0 ;v463=(753 -(329 + 421)) -2 ;end if (((3085 -(13 + 864))<=(3695 -(356 + 477))) and (v463==(1 + 0))) then v397=1 -0 ;break;end end end if ((v397==(1109 -(608 + 500))) or ((9712 -6749)<(3832 -(1197 + 50)))) then v231=331 -(327 + 2) ;break;end end break;end end end if ((v231==(1 + 1)) or ((2328 -(380 + 917))>=(1007 + 1081))) then for v419=v232,v82 do local v420=(0 -0) + 0 ;while true do if (((0 -0)==v420) or ((7804 -3916)==(140 + 849 + (3982 -2199)))) then v235=v235 + 1 + 0 ;v109[v419]=v233[v235];break;end end end break;end end break;end if ((v230==(1 + 0)) or ((493 + 3164)>=(1924 + 2568))) then local v340=0 -0 ;while true do if ((v340==(1 + 0 + (0 -0))) or ((4321 -(1880 + 83))<=(2029 -(84 + 8 + 10)))) then v230=(2 -0) + 0 ;break;end if ((v340==(0 -0)) or ((1044 + 1179)<(1562 -974))) then v233=nil;v234=nil;v340=(553 -(459 + 6)) -(56 + 31) ;end end end if ((v230==(1260 -(86 + (1917 -743)))) or ((328 + 196 + 103)<(1287 -(607 + 55)))) then local v341=0 -0 ;while true do if (((1534 + 954)==(4771 -(6000 -3717))) and ((1 + 0)==v341)) then v230=767 -(325 + 441) ;break;end if ((v341==(0 -0)) or (((4485 -(441 + 36)) -(686 + 232))<(6267 -3275))) then v231=0 + 0 ;v232=nil;v341=(1 -0) + 0 ;end end end end break;end if (((520 -((218 -62) + 5))>=(1262 -953)) and (v229==(5 -3))) then v234=nil;v235=nil;v229=3;end if (((3316 -(922 + 25))>=(2677 -(1753 + 16))) and (v229==(0 -0))) then v230=0 + 0 ;v231=nil;v229=4 -3 ;end if (((9971 -6443)>(3952 -2911)) and (v229==(3 -2))) then v232=nil;v233=nil;v229=(1425 -(1334 + 86)) -3 ;end end end elseif (((3376 + 544)<=3998) and (v112==(33 + 10))) then v109[v111[1 + 1 ]]=v109[v111[5 -2 ]] + v111[(2147 -(593 + 28)) -(273 + 1249) ] ;else v109[v111[1273 -(278 + 993) ]]={};end elseif ((v112<=(164 -113)) or (((11136 -(511 + 671)) -6005)>=((844 -383) + 3620))) then if (((5149 -(270 + 931))>=(3363 -(10 + 246))) and (v112<=((16 + 149) -118))) then if (((556 -377)<(4655 -(12 + 28 + 300))) and (v112<=(131 -86))) then v109[v111[1 + 1 ]][v109[v111[1599 -(1434 + 162) ]]]=v111[3 + 1 ];elseif (((5155 -(58 + 749))>(2871 -1321)) and (v112>(1504 -(758 + 700)))) then if (((24 + 3082)<3649) and (v109[v111[1998 -(199 + 1797) ]]<v111[4])) then v81=v81 + (1837 -(697 + 1139)) ;else v81=v111[1248 -(262 + 983) ];end else local v238=0 -0 ;local v239;local v240;local v241;local v242;local v243;while true do if (((4424 -2724)>605) and (v238==2)) then v243=nil;while true do if ((v239==(1791 -(1564 + (649 -423)))) or (((10990 -(160 + 1323)) -7413)<=(2844 -2070))) then local v342=0 -0 ;while true do if ((v342==(0 + 0 + 0)) or ((5420 -(1277 + 517))==(7846 -5685))) then v82=(v242 + v240) -(231 -(167 + 63)) ;v243=0;v342=1;end if (((2441 -(104 + 1566))<(4226 -1492)) and (v342==(600 -(591 + 8)))) then v239=2001 -(769 + 1230) ;break;end end end if ((v239==0) or ((14191 -10362)==(6530 -3177))) then local v343=0 + 0 + 0 ;while true do if (((2 -1)==v343) or ((1864 -((138 -42) + 66))>(16846 -12025))) then v239=1209 -(914 + 294) ;break;end if (((928 + 34)<=1614) and (v343==(161 -(72 + 89)))) then v240=v111[1 + 1 ];v241,v242=v106(v109[v240](v13(v109,v240 + 1 + 0 ,v82)));v343=(2 -1) + 0 ;end end end if (((2349 -(272 + 89))<(111 + 4457)) and (v239==(2 + 0))) then for v371=v240,v82 do local v372=0 -0 ;local v373;local v374;while true do if (((6700 -(599 + 1203))>(8428 -6315)) and (v372==(3 -2))) then while true do if (((2495 -(23 + 29))==(4314 -((553 -(107 + 179)) + 1604))) and (v373==(1507 -(357 + (1390 -(111 + 129)))))) then v374=0 + 0 ;while true do if (((1722 + 2233)>(54 + 13)) and (v374==(0 + 0))) then v243=v243 + (2 -1) ;v109[v371]=v241[v243];break;end end break;end end break;end if (((1160 + 3444)>=(1047 + 769)) and (v372==(0 -0))) then v373=0 -0 ;v374=nil;v372=1849 -(1216 + 632) ;end end end break;end end break;end if ((v238==(0 -0)) or ((11474 -(2095 + 4590))==(3860 + 365))) then v239=0 + 0 ;v240=nil;v238=346 -((1954 -(1583 + 230)) + 204) ;end if ((v238==(1307 -(464 + 842))) or ((2154 + 961)>(1162 + 2964))) then v241=nil;v242=nil;v238=905 -(811 + 92) ;end end end elseif (((1397 + 591)<=(4459 -(943 + (17 -13)))) and (v112<=(19 + 30))) then if ((v112==(4 + 44)) or ((2184 -(711 + 564))>=(3856 + 758))) then do return v109[v111[2]];end else local v244=(2960 -(1453 + 195)) -((707 -(111 + 158)) + 874) ;local v245;local v246;local v247;while true do if ((v244==(1681 -(1248 + (888 -456)))) or ((2494 -1146)<(1349 -(639 + (1460 -(1162 + 146)))))) then v247=nil;while true do if ((v245==(0 + 0)) or ((6369 -3248)>(5402 -(139 + 318)))) then local v344=175 -(54 + 121) ;while true do if (((291 + 30)<=(949 + (2800 -1957))) and (v344==(729 -(320 + 409)))) then v246=197 -(45 + 152) ;v247=nil;v344=1 -0 ;end if (((9155 -6149)==(4934 -(1704 + 224))) and (v344==(289 -(189 + (1817 -(662 + 1056)))))) then v245=(1949 -(1691 + 257)) + 0 ;break;end end end if ((((346 + 423) -(1667 -(838 + 282)))<(3351 -(955 + 90))) and (v245==(1 + 0 + 0))) then while true do if ((v246==(0 -0)) or ((194 + 4560)==(1907 + 22))) then v247=v111[1 + (1 -0) ];v109[v247](v13(v109,v247 + (2 -1) ,v111[3 + 0 ]));break;end end break;end end break;end if ((v244==(0 -0)) or (((4005 -(83 + 313)) -2547)>(3870 -(823 + 9)))) then v245=0 + 0 ;v246=nil;v244=3 -2 ;end end end elseif (((4147 -(84 + 503))>=(3541 -1044)) and (v112>(44 + 6))) then local v248=0 -0 ;local v249;local v250;local v251;local v252;local v253;local v254;while true do if ((((2378 -1165) + 3264)>(254 + 146)) and (v248==(1 + 1))) then v253=nil;v254=nil;v248=7 -4 ;end if ((((2746 + 227) -(951 + (2441 -(480 + 1461))))<=(85 + 4320)) and (v248==(821 -(533 + 285)))) then while true do if ((v249==((6 -3) -0)) or ((2209 -(437 + 286))>=(2513 -(158 + 96)))) then if (v254 or ((1112 + (3407 -(264 + 186)))<(3371 -(685 + 959)))) then local v377=0 -0 ;local v378;local v379;while true do if ((((3275 -(370 + 216)) -1648)<(3014 -1446)) and (v377==(381 -(135 + 246)))) then v378=1878 -(102 + 1776) ;v379=nil;v377=3 -2 ;end if ((v377==(1 + 0)) or ((1038 + 2607)<(755 + 540))) then while true do if ((v378==(0 -0)) or ((2489 + 261)>=(4139 + 280))) then v379=0 -0 ;while true do if (((9622 -6141)>(45 + 316)) and (v379==(0 -0))) then v109[v252]=v254;v81=v111[1175 -(839 + 333) ];break;end end break;end end break;end end else v81=v81 + (882 -(233 + 648)) ;end break;end if ((v249==(1278 -(179 + 300 + 798))) or ((1544 -(514 + 1020))==(921 + 225 + 1950))) then local v345=1467 -(515 + 952) ;while true do if ((v345==(0 -0)) or (((10438 -5741) -(284 + 425))<(18724 -14909))) then v252=v250 + 2 + 0 ;v253={v109[v250](v109[v250 + 1 ],v109[v252])};v345=1284 -(920 + 363) ;end if ((v345==(1 + 0)) or ((322 + 242 + 1054)>=3531)) then v249=2 -0 ;break;end end end if ((v249==(0 -0)) or ((13396 -10445)<(1778 + 987))) then local v346=0;while true do if ((v346==0) or ((378 + (1123 -(41 + 72)))>(5475 -3430))) then v250=v111[1 + 1 ];v251=v111[12 -8 ];v346=1 + 0 ;end if (((3213 -(988 + 219))<(4453 -(683 + 137))) and (v346==(1249 -(580 + 668)))) then v249=1 + 0 + 0 ;break;end end end if ((v249==(2 -0)) or ((4411 -(1094 + 1057))==(5891 -(198 + 1380)))) then local v347=0;while true do if ((v347==((1582 -557) -(82 + 943))) or ((2183 -(361 + 1497))==(6852 -2369))) then for v421=1 + 0 ,v251 do v109[v252 + v421 ]=v253[v421];end v254=v253[(2 -1) + 0 ];v347=2 -(1 + 0) ;end if (((2294 -(316 + 821))==(2937 -1780)) and (v347==(1 + 0))) then v249=3 + 0 + 0 ;break;end end end end break;end if ((v248==(469 -(323 + 145))) or (((5918 -3441) -(98 + 51))<=(907 -448))) then v251=nil;v252=nil;v248=6 -4 ;end if ((v248==(483 -(327 + 156))) or ((372 -243)>2054)) then v249=0 + 0 ;v250=nil;v248=1002 -(628 + 373) ;end end else v109[v111[2]]=v111[107 -(48 + 56) ]~=(633 -(285 + 140 + 208)) ;end elseif ((((2636 -1099) + 351)<3800) and (v112<=((165 -131) + 21))) then if (((1431 -(1131 -(188 + 418)))<(4930 -(82 + 274))) and (v112<=(134 -(168 -87)))) then if (((6777 -(1789 + 181))>=(3695 -(262 + 1078))) and (v112>(41 + 11))) then local v256=0 -0 ;local v257;local v258;local v259;local v260;local v261;while true do if ((v256==(0 -0)) or ((55 + 4743)<(2783 -(69 + 102 + 479)))) then v257=0 + 0 + 0 ;v258=nil;v256=1 + (1724 -(1463 + 261)) ;end if (((1525 -(85 + 856))<(3925 -(7280 -4989))) and (v256==(3 -1))) then v261=nil;while true do if (((2256 -((921 -(538 + 197)) + 948))==(2664 -(443 + 1099))) and (v257==2)) then while true do if (((18 + 612)>(808 -(13 + 239))) and (v258==(1374 -((1364 -944) + 953)))) then v261=v111[3 + 0 ];for v424=1 + 0 ,v261 do v260[v424]=v109[v259 + v424 ];end break;end if ((v258==(0 + 0)) or ((7547 -4909)<2008)) then local v404=0;local v405;while true do if ((v404==(0 -0)) or ((5532 -3485)==(4467 -(224 + 158)))) then v405=0 + 0 ;while true do if (((1788 -(816 + (2176 -(565 + 639))))==v405) or ((3869 -(488 + 867))<(1312 -(9 + 1049)))) then v259=v111[2];v260=v109[v259];v405=1 + 0 ;end if (((11798 -6880)>=(175 + 283)) and (v405==(2 -1))) then v258=3 -2 ;break;end end break;end end end end break;end if (((0 + 0)==v257) or ((1894 -(125 + (1349 -(658 + 108))))>=(12413 -(9466 -(35 + 253))))) then local v348=221 -(164 + 57) ;while true do if (((2128 -(190 + 1639))<=(4207 -(76 + 751))) and ((1 + 0)==v348)) then v257=4 -3 ;break;end if (((3823 -(419 + 119))>(2308 -1526)) and (v348==(326 -(248 + 78)))) then v258=0 + 0 ;v259=nil;v348=1 -0 ;end end end if (((119 + 120 + (93 -32))<=(2092 + 1415)) and (v257==(513 -(375 + 137)))) then local v349=0 + 0 ;while true do if ((v349==(0 + 0)) or ((2249 + 559)>=(4458 -(908 + 84 + 64)))) then v260=nil;v261=nil;v349=1883 -(1077 + (1313 -(461 + 47))) ;end if ((v349==((6 -4) -1)) or ((1888 + 2596)<(4390 -(377 + 1142)))) then v257=1 + 1 ;break;end end end end break;end if (((1348 + 1189)==((1739 -(756 + 339)) + 1893)) and (v256==(3 -2))) then v259=nil;v260=nil;v256=1491 -(87 + 1402) ;end end else local v262=0 -0 ;local v263;local v264;while true do if ((v262==(325 -(242 + 83))) or ((2946 -(571 + 71))>(462 + 3574))) then v263=0;v264=nil;v262=1831 -(1082 + 748) ;end if (((6288 -((240 -86) + 1369))>=(733 + 3871)) and (v262==(3 -2))) then while true do if ((v263==(0 -0)) or ((630 -(20 + 359))>=(1046 + 488))) then v264=v111[3 -1 ];do return v109[v264](v13(v109,v264 + 1 + 0 ,v111[1 + 2 ]));end break;end end break;end end end elseif ((((4428 -(835 + 401)) -(625 + 248))<=(6766 -(935 + 1361))) and (v112==54)) then if ((v111[343 -(106 + 235) ]==v109[v111[1 + 3 ]]) or ((2455 -(89 + 503))<(2133 -(678 + 881)))) then v81=v81 + 1 + (1281 -(442 + 839)) ;else v81=v111[1 + 2 ];end else local v265=(899 -(115 + 784)) -0 ;local v266;local v267;local v268;while true do if (((1724 + 2767)==((16153 -9861) -(427 + (2691 -1317)))) and (v265==(1 + 0))) then v268=nil;while true do if ((v266==((605 + 236) -(260 + 133 + 447))) or ((4318 + 379)==(1189 + 972))) then while true do if (((12075 -7305)>(977 + 1660)) and (v267==(0 -0))) then v268=v111[2 -0 ];v109[v268]=v109[v268]();break;end end break;end if (((4440 -(123 + 1542))<(5119 -(579 + 829))) and (v266==(0 + 0 + (1216 -(175 + 1041))))) then local v351=905 -(605 + 300) ;while true do if ((v351==(1835 -(882 + (1940 -988)))) or ((717 + 393)==106)) then v266=1 + 0 ;break;end if ((v351==(0 + 0)) or ((2475 -(576 + 1421))==1795)) then v267=0 + (448 -(106 + 342)) ;v268=nil;v351=497 -(436 + 60) ;end end end end break;end if (((2897 + 825)==(2642 + (1734 -(235 + 419)))) and (v265==(0 -0))) then v266=237 -(109 + 128) ;v267=nil;v265=2 -1 ;end end end elseif ((v112<=(1939 -(582 + 243 + 1057))) or ((1861 + 694)<=(1201 + 289))) then if ((((2232 -(60 + 588)) + 1006)>=(1934 + 630)) and (v112>(903 -(181 + (1557 -891))))) then local v269=0;local v270;local v271;local v272;local v273;local v274;local v275;while true do if ((v269==(0 -0)) or ((2355 + (3271 -(130 + 925)))<(3263 + 1040))) then v270=861 -(309 + 552) ;v271=nil;v269=568 -(498 + 69) ;end if ((v269==((1023 -(500 + 521)) + 0)) or ((3512 + 725)==(20863 -16161))) then v274=nil;v275=nil;v269=73 -(60 + (585 -(175 + 400))) ;end if ((v269==(11 -8)) or ((3843 -1816)<=278)) then while true do if ((v270==(883 -(627 + 255))) or ((350 + 3251)<=(2142 + 950))) then local v352=0 + 0 ;while true do if (((2586 -(141 + 602 + 190))<2633) and (v352==(1178 -(463 + 715)))) then v273=nil;v274=nil;v352=825 -(711 + 113) ;end if ((v352==((1 + 0) -0)) or ((1536 + 709)<(8 + 12))) then v270=6 -4 ;break;end end end if (((0 -0)==v270) or ((5280 -(617 + 695))<=(2377 -(1151 + 186 + 47)))) then v271=0 + (272 -(27 + 245)) ;v272=nil;v270=1 + 0 ;end if ((v270==(2 -0)) or ((482 + 2153)>(781 + 3592))) then v275=nil;while true do if ((v271==(1 + 0)) or ((3890 -1008)<(909 + 1697))) then local v408=(1725 + 48) -(1213 + 560) ;local v409;while true do if (((4467 -(254 + 1078))>(5501 -4353)) and (v408==(0 + 0))) then v409=0;while true do if ((v409==(0 -0)) or ((2959 + 1023)>4839)) then local v466=30 -(18 + 12) ;while true do if (((0 + 0)==v466) or ((352 -235)>=(2308 -738))) then v82=(v274 + v272) -(1 -0) ;v275=64 -(11 + 53) ;v466=1413 -(596 + 816) ;end if ((v466==((1 + 1) -1)) or ((2359 + 2077)==(5592 -(425 + 872)))) then v409=1;break;end end end if ((v409==(1 + 0)) or ((1167 -641)>=(2412 -(2073 -(631 + 127))))) then v271=2 -0 ;break;end end break;end end end if ((v271==(0 -0)) or ((2667 -(25 + 3 + 78))==(121 + 1623))) then local v410=0 -0 ;while true do if (((3535 -(986 + 666))>(794 -336)) and (v410==(336 -(246 + 90)))) then v272=v111[1916 -(946 + 968) ];v273,v274=v106(v109[v272](v109[v272 + (2 -1) ]));v410=1 + 0 ;end if ((v410==(1175 -(827 + 347))) or ((1969 -1086)>=(1592 + 1121))) then v271=552 -(145 + 406) ;break;end end end if ((v271==(2 + 0)) or ((11672 -8506)==(10444 -7975))) then for v427=v272,v82 do local v428=0;while true do if (((4262 -1614)==((20420 -13674) -4098)) and (v428==(0 -0))) then v275=v275 + 1 + 0 ;v109[v427]=v273[v275];break;end end end break;end end break;end end break;end if (((1605 -872)<=(4426 -(553 + 196))) and (v269==((1 -0) + 0))) then v272=nil;v273=nil;v269=2 + 0 ;end end else local v276=508 -(27 + 481) ;local v277;local v278;local v279;local v280;while true do if (((3371 + 1216)==(6265 -(189 + 1489))) and (v276==(1 + 1))) then while true do if (((10807 -7557)>=(2000 -866)) and (v277==((0 -0) -(683 -(100 + 583))))) then v278=0 -0 ;v279=nil;v277=1 + 0 ;end if ((v277==(1322 -(1008 + 313))) or ((1115 -809)==(1213 + 1609))) then v280=nil;while true do if ((v278==(0 -0)) or ((4945 -(685 + 192))<=(727 + 2773))) then local v411=0 + 0 ;local v412;while true do if ((((14905 -11060) -(1498 + 355))==(3268 -1276)) and (v411==(153 -(136 + 17)))) then v412=(0 + 0) -0 ;while true do if ((v412==(0 + 0)) or ((7353 -4788)>=(5241 -(796 + 410)))) then v279=v111[2 -0 ];v280={};v412=2 -(1 + 0) ;end if ((v412==(1 + (0 -0))) or (4524<=(20051 -(43049 -27030)))) then v278=1175 -(804 + 370) ;break;end end break;end end end if ((v278==(1471 -(321 + 1149))) or ((198 + 4414)<(1599 + 2209))) then for v429=940 -(152 + 787) , #v108 do local v430=0 -(1269 -(366 + 903)) ;local v431;local v432;while true do if ((v430==(0 + 0)) or (((32569 -25106) -4966)<=2088)) then v431=1907 -(356 + 1551) ;v432=nil;v430=4 -3 ;end if (((3272 -(153 + 362))<(3595 + 544)) and ((1 + 0)==v430)) then while true do if (((3682 -(583 + 86))>(1324 -1014)) and (((867 -(93 + 774)) + (754 -(13 + 741)))==v431)) then v432=v108[v429];for v483=712 -(132 + 580) , #v432 do local v484=(1345 -818) -(451 + 76) ;local v485;local v486;local v487;local v488;local v489;while true do if ((v484==(1 -0)) or ((972 + 10)==(3108 -(74 + 531)))) then v487=nil;v488=nil;v484=2;end if ((v484==((1904 -(812 + 1092)) + 0)) or ((147 + 17)==1978)) then v485=0 -0 ;v486=nil;v484=1 + 0 ;end if ((v484==((7 + 0) -5)) or ((11638 -9186)<((8748 -6552) -(1049 + 478 + 89)))) then v489=nil;while true do if ((v485==(1703 -(211 + 1492))) or ((1481 + 988)>(1647 + 2358))) then local v495=(0 -0) + 0 ;while true do if ((((2163 + 3191) -(1813 + 117))>=(285 + 1469)) and ((934 -(454 + 480))==v495)) then v486=1233 -(134 + 1099) ;v487=nil;v495=1 + 0 ;end if ((((11473 -7430) -(1007 + 307))>=(4279 -3384)) and (v495==(431 -(75 + 355)))) then v485=334 -((828 -(122 + 573)) + 200) ;break;end end end if (((4323 -(26 + 1344))==((40112 -28506) -8653)) and (v485==(498 -(357 + 139)))) then while true do if ((v486==(416 -((1611 -1261) + 66))) or (((3848 -1067) + 724)==(9 + 2366))) then local v498=0 -0 ;local v499;while true do if (((312 + 149)==(1929 -1468)) and (v498==(319 -(35 + 284)))) then v499=62 -(30 + 32) ;while true do if (((331 + 496)==(1382 -555)) and (v499==(414 -(46 + 367)))) then v486=2 -1 ;break;end if (((4980 -(106 + 871))<=((396 -119) + 4011)) and (v499==(0 + 0 + 0))) then local v503=1392 -(59 + 1333) ;while true do if ((v503==((1 -0) + 0)) or ((1058 + 1566)<(153 + 219))) then v499=4 -(1 + 2) ;break;end if (((3366 -((484 -(190 + 209)) + 253))>=(37 + 431)) and (v503==(0 + 0))) then v487=v432[v483];v488=v487[1199 -(98 + 1100) ];v503=1 + 0 ;end end end end break;end end end if ((((6 -3) -2)==v486) or (((3840 -(220 + 597)) -(917 + 971))==(2450 -(161 + 527)))) then v489=v487[6 -4 ];if (((v488==v109) and (v489>=v279)) or ((3245 -(403 + 1059))>=(1576 + 2173))) then local v501=765 -(708 + 57) ;local v502;while true do if ((v501==(0 -0)) or ((7830 -(14744 -8913))==(3241 -(310 + 335)))) then v502=0 -(0 -0) ;while true do if ((v502==(614 -(398 + (689 -473)))) or ((3042 -(1310 + 218))>=(4962 -(363 + 976)))) then v280[v489]=v488[v489];v487[2 -1 ]=v280;break;end end break;end end end break;end end break;end if ((v485==(1 + (0 -0))) or ((4418 -((4103 -2345) + 7))>=(2271 + 2526))) then v488=nil;v489=nil;v485=743 -(300 + 441) ;end end break;end end end break;end end break;end end end break;end end break;end end break;end if (((432 + 312)<=(17349 -(13873 -(235 + 19)))) and ((1 + 0)==v276)) then v279=nil;v280=nil;v276=(3 + 1) -(2 -0) ;end if (((9883 -5175)==((6889 -(167 + 1032)) -982)) and (v276==(0 -0))) then v277=(1571 -615) -(638 + 318) ;v278=nil;v276=1 + 0 ;end end end elseif ((v112==(53 + 5)) or ((4979 -3063)<=(1991 -(128 + 562)))) then v109[v111[2]][v111[(1390 -(1246 + 140)) -1 ]]=v111[13 -9 ];else v109[v111[1249 -(776 + (828 -(337 + 20))) ]]=v109[v111[1 + 2 ]][v109[v111[9 -5 ]]];end v81=v81 + (1 -0) ;break;end if (((0 -0)==v116) or ((2910 -1833)>(6160 -3088))) then local v121=256 -(154 + 102) ;while true do if ((v121==(1 + 0)) or ((1930 + 3013)==(996 + 645 + 3357))) then v116=840 -(702 + 137) ;break;end if ((v121==(0 + 0)) or ((1356 + 3612)==(890 + 2351))) then v111=v103[v81];v112=v111[1 + 0 ];v121=1;end end end end end end;v80=3;end end end;end end end return v34(v33(),{},v17)(...);end vv9(),...);end